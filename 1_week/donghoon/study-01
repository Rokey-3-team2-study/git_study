Git 
버전 관리 시스템: 코드 변경 내역을 기록하고, 이전 버전으로 되돌릴 수 있음.

브랜칭: 독립적인 작업 공간을 만들 수 있음.

분산형: 중앙 서버 없이 로컬에서 작업 가능.

GitHub
Git 저장소 호스팅 서비스: 온라인에서 Git 저장소를 관리하고 협업할 수 있음.

리포지토리: 프로젝트 단위로 코드와 이력을 관리.

풀 리퀘스트: 코드 변경 검토 요청 및 코드 리뷰 기능.





새로운 브랜치 생성
브랜치 생성:

bash
git branch [브랜치명]
예를 들어, feature-branch라는 브랜치를 만들고 싶다면 다음과 같이 입력하면 됩니다:

bash
git branch feature-branch
생성한 브랜치로 전환
브랜치 전환:

bash
git checkout [브랜치명]
방금 만든 feature-branch로 이동하려면, 다음 명령어를 사용하면 됩니다:

bash
git checkout feature-branch
브랜치 생성과 동시에 전환
한 번에 브랜치 생성 및 전환: 생성과 동시에 새 브랜치로 전환하려면 아래의 명령어를 사용합니다:

bash
git checkout -b [브랜치명]
예를 들어, feature-branch라는 브랜치를 생성하고 동시에 이동하려면 다음과 같이 입력하면 됩니다:

bash
git 






새로운 브랜치 생성
브랜치 생성:

bash
git branch [브랜치명]
예를 들어, feature-branch라는 브랜치를 만들고 싶다면 다음과 같이 입력하면 됩니다:

bash
git branch feature-branch
생성한 브랜치로 전환
브랜치 전환:

bash
git checkout [브랜치명]
방금 만든 feature-branch로 이동하려면, 다음 명령어를 사용하면 됩니다:

bash
git checkout feature-branch
브랜치 생성과 동시에 전환
한 번에 브랜치 생성 및 전환: 생성과 동시에 새 브랜치로 전환하려면 아래의 명령어를 사용합니다:

bash
git checkout -b [브랜치명]
예를 들어, feature-branch라는 브랜치를 생성하고 동시에 이동하려면 다음과 같이 입력하면 됩니다:

bash
git 





[VSCode에서 마크다운 파일 작성하기]

새 파일 생성: VSCode에서 새 파일을 만듭니다. 파일 이름에 .md 확장자를 붙여서 저장합니다. 예를 들어, README.md.

마크다운 내용 작성: 새로 생성한 .md 파일에 마크다운 문법을 사용하여 내용을 작성합니다. 예를 들어:

markdown
# 프로젝트 제목
이 프로젝트는...

## 설치 방법
1. 첫 번째 단계
2. 두 번째 단계

## 사용법
다음과 같이 사용합니다:
```python
print("Hello, World!")

미리보기 기능 사용: VSCode에서는 마크다운 파일을 작성하면서 바로 미리보기를 할 수 있습니다.

마크다운 파일을 저장한 후, Ctrl + Shift + V를 눌러 미리보기를 활성화합니다.

또는, 우측 상단의 Open Preview to the Side 아이콘을 클릭하여 미리보기를 활성화할 수 있습니다.

깃허브에 업로드: 마크다운 파일을 작성한 후, 이전에 설명드린 Git 명령어를 사용하여 브랜치에 업로드합니다.

bash
git add README.md
git commit -m "Add README file"
git push origin 


